/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4-rc-3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // We want to be able to save to mavenLocal, so we need this plugin
    id 'maven-publish'
}

group 'owl-utilities'
version '0.0.1-SNAPSHOT'

// Every time we build the artifact we also want to publish it to mavenLocal
tasks.build.dependsOn publishToMavenLocal

// We also want a task to clear the grapes cache for this library locally.
tasks.register('clearGrapesCache', Delete) {
    delete "${System.properties['user.home']}/.groovy/grapes/${project.group}"
}

// And we want to clear the grapes cache when we execute build task
tasks.build.dependsOn clearGrapesCache

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java // This line is for Java projects, for Android use 'components.release'

            groupId = group
            artifactId = 'owl-stl-flix-scrapper'
            version = version
        }
    }
}

repositories {
    // First try to use local maven repository, in case we have compiled it.
    mavenLocal()

    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Implementation dependencies.

    // https://mvnrepository.com/artifact/org.apache.groovy/groovy-all
    implementation 'org.apache.groovy:groovy-all:4.0.15'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
